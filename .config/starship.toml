# ~/.config/starship.toml

# Get editor completions based on the config schema
"$schema" = 'https://starship.rs/config-schema.json'

# Inserts a blank line between shell prompts
add_newline = true

# Custom format
format = """
$env_var\
$username\
$hostname\
$directory\
$git_branch\
$git_status\
$cmd_duration\
$character"""

# Cool prompt symbols
[character]
success_symbol = "[‚ö°](bold green)"
error_symbol = "[üí•](bold red)"

# OS detection with icons
[env_var.OS_ICON]
variable = "STARSHIP_OS"
default = ""
format = "[$env_value]($style) "
style = "bold blue"

# Example of how to set this in your shell profile:
# export STARSHIP_OS="$(case "$(uname -s)" in
#   Darwin*) echo ""; ;;  # macOS (Apple)
#   Linux*) 
#     if [ -f /etc/os-release ]; then
#       if grep -q "Ubuntu" /etc/os-release; then echo ""; # Ubuntu
#       elif grep -q "Debian" /etc/os-release; then echo ""; # Debian
#       elif grep -q "Arch" /etc/os-release; then echo ""; # Arch
#       elif grep -q "Fedora" /etc/os-release; then echo ""; # Fedora
#       else echo ""; # Generic Linux
#       fi
#     else echo ""; # Generic Linux
#     fi ;;
#   CYGWIN*|MINGW*|MSYS*) echo ""; ;; # Windows
#   *) echo ""; ;; # Unknown
# esac)"

# Hostname
[hostname]
ssh_only = false
format = "[$hostname]($style) "
style = "bold yellow"

# Current directory with style
[directory]
truncation_length = 3
truncation_symbol = "‚Ä¶/"
style = "bold cyan"
format = "[ $path]($style) "
read_only = " üîí"
read_only_style = "red"

# Git configuration
[git_branch]
symbol = " "
format = "[$symbol$branch]($style) "
style = "bold purple"

[git_status]
conflicted = "Û∞ûá "
ahead = "‚á°${count} "
behind = "‚á£${count} "
diverged = "‚áï‚á°${ahead_count}‚á£${behind_count} "
untracked = "?${count} "
stashed = "Û∞èñ "
modified = "!${count} "
staged = "+${count} "
renamed = "¬ª${count} "
deleted = "‚úò${count} "
style = "bold red"
format = '([$all_status$ahead_behind]($style) )'

# Command execution time
[cmd_duration]
min_time = 500
format = "took [$duration](bold yellow)"

# DNF updates checker
[custom.dnf_updates]
command = "dnf check-update -q | grep -v '^
 | wc -l"
when = "which dnf"
symbol = "üì¶ "
style = "bold red"
format = "[$symbol($output updates)]($style) "
shell = ["bash", "--noprofile", "--norc"]
ignore_timeout = true
interval = 10800 # Check every 3 hours
